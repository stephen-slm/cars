// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        (unknown)
// source: content/consumer/v1/consumer.proto

package v1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The response from the ping.
type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ping message.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{0}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Used to request a usable code snippet/template for a given supported language.
type GetTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The language which template should be returned.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetTemplateRequest) Reset() {
	*x = GetTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateRequest) ProtoMessage() {}

func (x *GetTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateRequest.ProtoReflect.Descriptor instead.
func (*GetTemplateRequest) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{1}
}

func (x *GetTemplateRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// Returns the template code for a given language. This template can compile
// and run safely out of the box.
type GetTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The template code for the given requested language.
	Template string `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *GetTemplateResponse) Reset() {
	*x = GetTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTemplateResponse) ProtoMessage() {}

func (x *GetTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTemplateResponse.ProtoReflect.Descriptor instead.
func (*GetTemplateResponse) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{2}
}

func (x *GetTemplateResponse) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

// A possible supported language information.
type SupportedLanguage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The language code send during the compile request, this is not the same as
	// the display name. This is also the code used to get the template.
	LanguageCode string `protobuf:"bytes,1,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	// The display name the user can be shown and will understand for example
	// the display name could be C# and the code would be csharp.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *SupportedLanguage) Reset() {
	*x = SupportedLanguage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportedLanguage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportedLanguage) ProtoMessage() {}

func (x *SupportedLanguage) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportedLanguage.ProtoReflect.Descriptor instead.
func (*SupportedLanguage) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{3}
}

func (x *SupportedLanguage) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *SupportedLanguage) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

// Contains the list of supported languages currently.
type GetSupportedLanguagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of supported languages within the system.
	Languages []*SupportedLanguage `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *GetSupportedLanguagesResponse) Reset() {
	*x = GetSupportedLanguagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSupportedLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSupportedLanguagesResponse) ProtoMessage() {}

func (x *GetSupportedLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSupportedLanguagesResponse.ProtoReflect.Descriptor instead.
func (*GetSupportedLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{4}
}

func (x *GetSupportedLanguagesResponse) GetLanguages() []*SupportedLanguage {
	if x != nil {
		return x.Languages
	}
	return nil
}

// The request to compile and run code.
type CreateCompileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The target language that is being sent. Incorrectly setting this will
	// result in a faulted request.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	// The source code that will be executed, this should be well formatted as
	// if it was ready to be compiled. Misconfigured ro formatted code will be
	// rejected by the runtime or compiler.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// This array of strings will be written to the standard input of the code
	// when executing. Each array item is a line which will be written one after
	// another.
	StandardInData []string `protobuf:"bytes,3,rep,name=standard_in_data,json=standardInData,proto3" json:"standard_in_data,omitempty"`
	// This is an array of expected output data, including data here that will
	// result in a validation check on completion. If no items are added to the
	// array then the status endpoint will return NoTest for the test status.
	// Otherwise, a value related to the test result.
	ExpectedStandardOutData []string `protobuf:"bytes,4,rep,name=expected_standard_out_data,json=expectedStandardOutData,proto3" json:"expected_standard_out_data,omitempty"`
}

func (x *CreateCompileRequest) Reset() {
	*x = CreateCompileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompileRequest) ProtoMessage() {}

func (x *CreateCompileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompileRequest.ProtoReflect.Descriptor instead.
func (*CreateCompileRequest) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCompileRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *CreateCompileRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CreateCompileRequest) GetStandardInData() []string {
	if x != nil {
		return x.StandardInData
	}
	return nil
}

func (x *CreateCompileRequest) GetExpectedStandardOutData() []string {
	if x != nil {
		return x.ExpectedStandardOutData
	}
	return nil
}

// The response when requesting a compiled request via the queue.
type CreateCompileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The reference ID of the compile request. Use later to retrieve updated
	// information regarding the state of the execution.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCompileResponse) Reset() {
	*x = CreateCompileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCompileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCompileResponse) ProtoMessage() {}

func (x *CreateCompileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCompileResponse.ProtoReflect.Descriptor instead.
func (*CreateCompileResponse) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCompileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Compile result request can be used to request updated information about the
// state or result of the compile request.
type GetCompileResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the request, this value would have been returned by the compile
	// execution request.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCompileResultRequest) Reset() {
	*x = GetCompileResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompileResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompileResultRequest) ProtoMessage() {}

func (x *GetCompileResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompileResultRequest.ProtoReflect.Descriptor instead.
func (*GetCompileResultRequest) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{7}
}

func (x *GetCompileResultRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The details of a compile request.
type GetCompileResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The language which was used in to compile and execute request. This will
	// match the request language.
	Language string `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	// The resulting status of the entire request.
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// The resulting test status, if a test was provided.
	TestStatus string `protobuf:"bytes,3,opt,name=test_status,json=testStatus,proto3" json:"test_status,omitempty"`
	// The total milliseconds taken to compile the request if it was not an
	// interpreted language.
	CompileMs int64 `protobuf:"varint,4,opt,name=compile_ms,json=compileMs,proto3" json:"compile_ms,omitempty"`
	// The total milliseconds taken to run the code.
	RuntimeMs int64 `protobuf:"varint,5,opt,name=runtime_ms,json=runtimeMs,proto3" json:"runtime_ms,omitempty"`
	// The maximum  number of megabytes used to run the request.
	RuntimeMemoryMb float64 `protobuf:"fixed64,6,opt,name=runtime_memory_mb,json=runtimeMemoryMb,proto3" json:"runtime_memory_mb,omitempty"`
	// The raw output of the request.
	Output string `protobuf:"bytes,7,opt,name=output,proto3" json:"output,omitempty"`
	// The raw error output of the request.
	OutputError string `protobuf:"bytes,8,opt,name=output_error,json=outputError,proto3" json:"output_error,omitempty"`
	// The raw compile output of the request, if compiled.
	CompilerOutput string `protobuf:"bytes,9,opt,name=compiler_output,json=compilerOutput,proto3" json:"compiler_output,omitempty"`
}

func (x *GetCompileResultResponse) Reset() {
	*x = GetCompileResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_content_consumer_v1_consumer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompileResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompileResultResponse) ProtoMessage() {}

func (x *GetCompileResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_content_consumer_v1_consumer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompileResultResponse.ProtoReflect.Descriptor instead.
func (*GetCompileResultResponse) Descriptor() ([]byte, []int) {
	return file_content_consumer_v1_consumer_proto_rawDescGZIP(), []int{8}
}

func (x *GetCompileResultResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *GetCompileResultResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetCompileResultResponse) GetTestStatus() string {
	if x != nil {
		return x.TestStatus
	}
	return ""
}

func (x *GetCompileResultResponse) GetCompileMs() int64 {
	if x != nil {
		return x.CompileMs
	}
	return 0
}

func (x *GetCompileResultResponse) GetRuntimeMs() int64 {
	if x != nil {
		return x.RuntimeMs
	}
	return 0
}

func (x *GetCompileResultResponse) GetRuntimeMemoryMb() float64 {
	if x != nil {
		return x.RuntimeMemoryMb
	}
	return 0
}

func (x *GetCompileResultResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *GetCompileResultResponse) GetOutputError() string {
	if x != nil {
		return x.OutputError
	}
	return ""
}

func (x *GetCompileResultResponse) GetCompilerOutput() string {
	if x != nil {
		return x.CompilerOutput
	}
	return ""
}

var File_content_consumer_v1_consumer_proto protoreflect.FileDescriptor

var file_content_consumer_v1_consumer_proto_rawDesc = []byte{
	0x0a, 0x22, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x7a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x5e, 0xfa, 0x42, 0x5b, 0x72, 0x59, 0x52, 0x07, 0x70, 0x79, 0x74, 0x68, 0x6f,
	0x6e, 0x32, 0x52, 0x06, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x72, 0x75, 0x73, 0x74, 0x52, 0x04, 0x72, 0x75, 0x62, 0x79, 0x52, 0x02, 0x67, 0x6f,
	0x52, 0x01, 0x63, 0x52, 0x03, 0x63, 0x70, 0x70, 0x52, 0x06, 0x66, 0x73, 0x68, 0x61, 0x72, 0x70,
	0x52, 0x06, 0x63, 0x73, 0x68, 0x61, 0x72, 0x70, 0x52, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x52, 0x06,
	0x6b, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x52, 0x03, 0x70,
	0x68, 0x70, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x31, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x22,
	0x5b, 0x0a, 0x11, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x65, 0x0a, 0x1d,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x22, 0x9d, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x7a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x5e,
	0xfa, 0x42, 0x5b, 0x72, 0x59, 0x52, 0x07, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x32, 0x52, 0x06,
	0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72, 0x75,
	0x73, 0x74, 0x52, 0x04, 0x72, 0x75, 0x62, 0x79, 0x52, 0x02, 0x67, 0x6f, 0x52, 0x01, 0x63, 0x52,
	0x03, 0x63, 0x70, 0x70, 0x52, 0x06, 0x66, 0x73, 0x68, 0x61, 0x72, 0x70, 0x52, 0x06, 0x63, 0x73,
	0x68, 0x61, 0x72, 0x70, 0x52, 0x04, 0x6a, 0x61, 0x76, 0x61, 0x52, 0x06, 0x6b, 0x6f, 0x74, 0x6c,
	0x69, 0x6e, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x52, 0x03, 0x70, 0x68, 0x70, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10,
	0x05, 0x18, 0x80, 0x08, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x1a, 0x65, 0x78, 0x70, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x5f, 0x6f, 0x75, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x17, 0x65, 0x78, 0x70, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64, 0x4f, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x27, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x17,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbd, 0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x4d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x75, 0x6e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x75,
	0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6d, 0x62, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x4d, 0x62, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27,
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x72, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x32, 0xfe, 0x03, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x04, 0x50,
	0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x0d, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x12, 0x29, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x2c, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x2e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x35, 0x5a, 0x33, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x2d, 0x61, 0x6e, 0x64, 0x2d, 0x72, 0x75, 0x6e, 0x2d, 0x73, 0x61, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_content_consumer_v1_consumer_proto_rawDescOnce sync.Once
	file_content_consumer_v1_consumer_proto_rawDescData = file_content_consumer_v1_consumer_proto_rawDesc
)

func file_content_consumer_v1_consumer_proto_rawDescGZIP() []byte {
	file_content_consumer_v1_consumer_proto_rawDescOnce.Do(func() {
		file_content_consumer_v1_consumer_proto_rawDescData = protoimpl.X.CompressGZIP(file_content_consumer_v1_consumer_proto_rawDescData)
	})
	return file_content_consumer_v1_consumer_proto_rawDescData
}

var file_content_consumer_v1_consumer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_content_consumer_v1_consumer_proto_goTypes = []interface{}{
	(*PingResponse)(nil),                  // 0: content.consumer.v1.PingResponse
	(*GetTemplateRequest)(nil),            // 1: content.consumer.v1.GetTemplateRequest
	(*GetTemplateResponse)(nil),           // 2: content.consumer.v1.GetTemplateResponse
	(*SupportedLanguage)(nil),             // 3: content.consumer.v1.SupportedLanguage
	(*GetSupportedLanguagesResponse)(nil), // 4: content.consumer.v1.GetSupportedLanguagesResponse
	(*CreateCompileRequest)(nil),          // 5: content.consumer.v1.CreateCompileRequest
	(*CreateCompileResponse)(nil),         // 6: content.consumer.v1.CreateCompileResponse
	(*GetCompileResultRequest)(nil),       // 7: content.consumer.v1.GetCompileResultRequest
	(*GetCompileResultResponse)(nil),      // 8: content.consumer.v1.GetCompileResultResponse
	(*emptypb.Empty)(nil),                 // 9: google.protobuf.Empty
}
var file_content_consumer_v1_consumer_proto_depIdxs = []int32{
	3, // 0: content.consumer.v1.GetSupportedLanguagesResponse.languages:type_name -> content.consumer.v1.SupportedLanguage
	9, // 1: content.consumer.v1.ConsumerService.Ping:input_type -> google.protobuf.Empty
	1, // 2: content.consumer.v1.ConsumerService.GetTemplate:input_type -> content.consumer.v1.GetTemplateRequest
	9, // 3: content.consumer.v1.ConsumerService.GetSupportedLanguages:input_type -> google.protobuf.Empty
	5, // 4: content.consumer.v1.ConsumerService.CreateCompile:input_type -> content.consumer.v1.CreateCompileRequest
	7, // 5: content.consumer.v1.ConsumerService.GetCompileResult:input_type -> content.consumer.v1.GetCompileResultRequest
	0, // 6: content.consumer.v1.ConsumerService.Ping:output_type -> content.consumer.v1.PingResponse
	2, // 7: content.consumer.v1.ConsumerService.GetTemplate:output_type -> content.consumer.v1.GetTemplateResponse
	4, // 8: content.consumer.v1.ConsumerService.GetSupportedLanguages:output_type -> content.consumer.v1.GetSupportedLanguagesResponse
	6, // 9: content.consumer.v1.ConsumerService.CreateCompile:output_type -> content.consumer.v1.CreateCompileResponse
	8, // 10: content.consumer.v1.ConsumerService.GetCompileResult:output_type -> content.consumer.v1.GetCompileResultResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_content_consumer_v1_consumer_proto_init() }
func file_content_consumer_v1_consumer_proto_init() {
	if File_content_consumer_v1_consumer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_content_consumer_v1_consumer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportedLanguage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSupportedLanguagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCompileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompileResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_content_consumer_v1_consumer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompileResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_content_consumer_v1_consumer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_content_consumer_v1_consumer_proto_goTypes,
		DependencyIndexes: file_content_consumer_v1_consumer_proto_depIdxs,
		MessageInfos:      file_content_consumer_v1_consumer_proto_msgTypes,
	}.Build()
	File_content_consumer_v1_consumer_proto = out.File
	file_content_consumer_v1_consumer_proto_rawDesc = nil
	file_content_consumer_v1_consumer_proto_goTypes = nil
	file_content_consumer_v1_consumer_proto_depIdxs = nil
}
